// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Moneychanger.proto

#include "Moneychanger.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace opentxs {
namespace OTDB {
class ServerInfo_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfo_InternalPB>
      _instance;
} _ServerInfo_InternalPB_default_instance_;
class ContactNym_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactNym_InternalPB>
      _instance;
} _ContactNym_InternalPB_default_instance_;
class ContactAcct_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactAcct_InternalPB>
      _instance;
} _ContactAcct_InternalPB_default_instance_;
class Contact_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Contact_InternalPB>
      _instance;
} _Contact_InternalPB_default_instance_;
class AddressBook_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddressBook_InternalPB>
      _instance;
} _AddressBook_InternalPB_default_instance_;
class WalletData_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WalletData_InternalPB>
      _instance;
} _WalletData_InternalPB_default_instance_;
}  // namespace OTDB
}  // namespace opentxs
namespace protobuf_Moneychanger_2eproto {
void InitDefaultsServerInfo_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::opentxs::OTDB::_ServerInfo_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::ServerInfo_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::ServerInfo_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsServerInfo_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerInfo_InternalPBImpl);
}

void InitDefaultsContactNym_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Moneychanger_2eproto::InitDefaultsServerInfo_InternalPB();
  {
    void* ptr = &::opentxs::OTDB::_ContactNym_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::ContactNym_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::ContactNym_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsContactNym_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContactNym_InternalPBImpl);
}

void InitDefaultsContactAcct_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::opentxs::OTDB::_ContactAcct_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::ContactAcct_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::ContactAcct_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsContactAcct_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContactAcct_InternalPBImpl);
}

void InitDefaultsContact_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Moneychanger_2eproto::InitDefaultsContactNym_InternalPB();
  protobuf_Moneychanger_2eproto::InitDefaultsContactAcct_InternalPB();
  {
    void* ptr = &::opentxs::OTDB::_Contact_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::Contact_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::Contact_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsContact_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContact_InternalPBImpl);
}

void InitDefaultsAddressBook_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Moneychanger_2eproto::InitDefaultsContact_InternalPB();
  {
    void* ptr = &::opentxs::OTDB::_AddressBook_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::AddressBook_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::AddressBook_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsAddressBook_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddressBook_InternalPBImpl);
}

void InitDefaultsWalletData_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Bitcoin_2eproto::InitDefaultsBitcoinServer_InternalPB();
  protobuf_Bitcoin_2eproto::InitDefaultsBitcoinAcct_InternalPB();
  protobuf_Bitcoin_2eproto::InitDefaultsRippleServer_InternalPB();
  protobuf_Bitcoin_2eproto::InitDefaultsLoomServer_InternalPB();
  {
    void* ptr = &::opentxs::OTDB::_WalletData_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::WalletData_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::WalletData_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsWalletData_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWalletData_InternalPBImpl);
}

}  // namespace protobuf_Moneychanger_2eproto
namespace opentxs {
namespace OTDB {

// ===================================================================

void ServerInfo_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfo_InternalPB::kServerTypeFieldNumber;
const int ServerInfo_InternalPB::kNotaryIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfo_InternalPB::ServerInfo_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Moneychanger_2eproto::InitDefaultsServerInfo_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.ServerInfo_InternalPB)
}
ServerInfo_InternalPB::ServerInfo_InternalPB(const ServerInfo_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_server_type()) {
    server_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_type_);
  }
  notary_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_notary_id()) {
    notary_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notary_id_);
  }
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.ServerInfo_InternalPB)
}

void ServerInfo_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  server_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notary_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerInfo_InternalPB::~ServerInfo_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.ServerInfo_InternalPB)
  SharedDtor();
}

void ServerInfo_InternalPB::SharedDtor() {
  server_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notary_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfo_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ServerInfo_InternalPB& ServerInfo_InternalPB::default_instance() {
  ::protobuf_Moneychanger_2eproto::InitDefaultsServerInfo_InternalPB();
  return *internal_default_instance();
}

ServerInfo_InternalPB* ServerInfo_InternalPB::New(::google::protobuf::Arena* arena) const {
  ServerInfo_InternalPB* n = new ServerInfo_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerInfo_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.ServerInfo_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!server_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*server_type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!notary_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*notary_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerInfo_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.ServerInfo_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string server_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string notary_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notary_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.ServerInfo_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.ServerInfo_InternalPB)
  return false;
#undef DO_
}

void ServerInfo_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.ServerInfo_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string server_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_type(), output);
  }

  // optional string notary_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->notary_id(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.ServerInfo_InternalPB)
}

size_t ServerInfo_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.ServerInfo_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string server_type = 1;
    if (has_server_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_type());
    }

    // optional string notary_id = 2;
    if (has_notary_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notary_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerInfo_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ServerInfo_InternalPB*>(&from));
}

void ServerInfo_InternalPB::MergeFrom(const ServerInfo_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.ServerInfo_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_server_type();
      server_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_notary_id();
      notary_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notary_id_);
    }
  }
}

void ServerInfo_InternalPB::CopyFrom(const ServerInfo_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.ServerInfo_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfo_InternalPB::IsInitialized() const {
  return true;
}

void ServerInfo_InternalPB::Swap(ServerInfo_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfo_InternalPB::InternalSwap(ServerInfo_InternalPB* other) {
  using std::swap;
  server_type_.Swap(&other->server_type_);
  notary_id_.Swap(&other->notary_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ServerInfo_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.ServerInfo_InternalPB";
}


// ===================================================================

void ContactNym_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactNym_InternalPB::kGuiLabelFieldNumber;
const int ContactNym_InternalPB::kNymTypeFieldNumber;
const int ContactNym_InternalPB::kNymIdFieldNumber;
const int ContactNym_InternalPB::kPublicKeyFieldNumber;
const int ContactNym_InternalPB::kMemoFieldNumber;
const int ContactNym_InternalPB::kServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactNym_InternalPB::ContactNym_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Moneychanger_2eproto::InitDefaultsContactNym_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.ContactNym_InternalPB)
}
ContactNym_InternalPB::ContactNym_InternalPB(const ContactNym_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      servers_(from.servers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gui_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gui_label()) {
    gui_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gui_label_);
  }
  nym_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nym_type()) {
    nym_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nym_type_);
  }
  nym_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nym_id()) {
    nym_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nym_id_);
  }
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_memo()) {
    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.ContactNym_InternalPB)
}

void ContactNym_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  gui_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nym_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nym_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ContactNym_InternalPB::~ContactNym_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.ContactNym_InternalPB)
  SharedDtor();
}

void ContactNym_InternalPB::SharedDtor() {
  gui_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nym_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nym_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContactNym_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ContactNym_InternalPB& ContactNym_InternalPB::default_instance() {
  ::protobuf_Moneychanger_2eproto::InitDefaultsContactNym_InternalPB();
  return *internal_default_instance();
}

ContactNym_InternalPB* ContactNym_InternalPB::New(::google::protobuf::Arena* arena) const {
  ContactNym_InternalPB* n = new ContactNym_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContactNym_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.ContactNym_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gui_label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gui_label_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!nym_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nym_type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!nym_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nym_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!public_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*public_key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!memo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*memo_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ContactNym_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.ContactNym_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gui_label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gui_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nym_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nym_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nym_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nym_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string public_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string memo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.OTDB.ServerInfo_InternalPB servers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_servers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.ContactNym_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.ContactNym_InternalPB)
  return false;
#undef DO_
}

void ContactNym_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.ContactNym_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gui_label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gui_label(), output);
  }

  // optional string nym_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nym_type(), output);
  }

  // optional string nym_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nym_id(), output);
  }

  // optional string public_key = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->public_key(), output);
  }

  // optional string memo = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->memo(), output);
  }

  // repeated .opentxs.OTDB.ServerInfo_InternalPB servers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->servers(static_cast<int>(i)), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.ContactNym_InternalPB)
}

size_t ContactNym_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.ContactNym_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .opentxs.OTDB.ServerInfo_InternalPB servers = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->servers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->servers(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string gui_label = 1;
    if (has_gui_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gui_label());
    }

    // optional string nym_type = 2;
    if (has_nym_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nym_type());
    }

    // optional string nym_id = 3;
    if (has_nym_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nym_id());
    }

    // optional string public_key = 4;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->public_key());
    }

    // optional string memo = 5;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactNym_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ContactNym_InternalPB*>(&from));
}

void ContactNym_InternalPB::MergeFrom(const ContactNym_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.ContactNym_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servers_.MergeFrom(from.servers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gui_label();
      gui_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gui_label_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nym_type();
      nym_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nym_type_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_nym_id();
      nym_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nym_id_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_public_key();
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_memo();
      memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
    }
  }
}

void ContactNym_InternalPB::CopyFrom(const ContactNym_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.ContactNym_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactNym_InternalPB::IsInitialized() const {
  return true;
}

void ContactNym_InternalPB::Swap(ContactNym_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactNym_InternalPB::InternalSwap(ContactNym_InternalPB* other) {
  using std::swap;
  servers_.InternalSwap(&other->servers_);
  gui_label_.Swap(&other->gui_label_);
  nym_type_.Swap(&other->nym_type_);
  nym_id_.Swap(&other->nym_id_);
  public_key_.Swap(&other->public_key_);
  memo_.Swap(&other->memo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ContactNym_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.ContactNym_InternalPB";
}


// ===================================================================

void ContactAcct_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactAcct_InternalPB::kGuiLabelFieldNumber;
const int ContactAcct_InternalPB::kServerTypeFieldNumber;
const int ContactAcct_InternalPB::kNotaryIdFieldNumber;
const int ContactAcct_InternalPB::kInstrumentDefinitionIdFieldNumber;
const int ContactAcct_InternalPB::kAcctIdFieldNumber;
const int ContactAcct_InternalPB::kNymIdFieldNumber;
const int ContactAcct_InternalPB::kMemoFieldNumber;
const int ContactAcct_InternalPB::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactAcct_InternalPB::ContactAcct_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Moneychanger_2eproto::InitDefaultsContactAcct_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.ContactAcct_InternalPB)
}
ContactAcct_InternalPB::ContactAcct_InternalPB(const ContactAcct_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gui_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gui_label()) {
    gui_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gui_label_);
  }
  server_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_server_type()) {
    server_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_type_);
  }
  notary_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_notary_id()) {
    notary_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notary_id_);
  }
  instrument_definition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_instrument_definition_id()) {
    instrument_definition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_definition_id_);
  }
  acct_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_acct_id()) {
    acct_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acct_id_);
  }
  nym_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nym_id()) {
    nym_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nym_id_);
  }
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_memo()) {
    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.ContactAcct_InternalPB)
}

void ContactAcct_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  gui_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notary_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_definition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acct_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nym_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ContactAcct_InternalPB::~ContactAcct_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.ContactAcct_InternalPB)
  SharedDtor();
}

void ContactAcct_InternalPB::SharedDtor() {
  gui_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notary_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_definition_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acct_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nym_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContactAcct_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ContactAcct_InternalPB& ContactAcct_InternalPB::default_instance() {
  ::protobuf_Moneychanger_2eproto::InitDefaultsContactAcct_InternalPB();
  return *internal_default_instance();
}

ContactAcct_InternalPB* ContactAcct_InternalPB::New(::google::protobuf::Arena* arena) const {
  ContactAcct_InternalPB* n = new ContactAcct_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContactAcct_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.ContactAcct_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gui_label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gui_label_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!server_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*server_type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!notary_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*notary_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!instrument_definition_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*instrument_definition_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!acct_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*acct_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!nym_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nym_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!memo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*memo_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!public_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*public_key_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ContactAcct_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.ContactAcct_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gui_label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gui_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string server_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string notary_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notary_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string instrument_definition_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string acct_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acct_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nym_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nym_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string memo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string public_key = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.ContactAcct_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.ContactAcct_InternalPB)
  return false;
#undef DO_
}

void ContactAcct_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.ContactAcct_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gui_label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gui_label(), output);
  }

  // optional string server_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_type(), output);
  }

  // optional string notary_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->notary_id(), output);
  }

  // optional string instrument_definition_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->instrument_definition_id(), output);
  }

  // optional string acct_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->acct_id(), output);
  }

  // optional string nym_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->nym_id(), output);
  }

  // optional string memo = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->memo(), output);
  }

  // optional string public_key = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->public_key(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.ContactAcct_InternalPB)
}

size_t ContactAcct_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.ContactAcct_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string gui_label = 1;
    if (has_gui_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gui_label());
    }

    // optional string server_type = 2;
    if (has_server_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_type());
    }

    // optional string notary_id = 3;
    if (has_notary_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notary_id());
    }

    // optional string instrument_definition_id = 4;
    if (has_instrument_definition_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instrument_definition_id());
    }

    // optional string acct_id = 5;
    if (has_acct_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acct_id());
    }

    // optional string nym_id = 6;
    if (has_nym_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nym_id());
    }

    // optional string memo = 7;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }

    // optional string public_key = 8;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->public_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactAcct_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ContactAcct_InternalPB*>(&from));
}

void ContactAcct_InternalPB::MergeFrom(const ContactAcct_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.ContactAcct_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gui_label();
      gui_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gui_label_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_server_type();
      server_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_type_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_notary_id();
      notary_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notary_id_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_instrument_definition_id();
      instrument_definition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_definition_id_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_acct_id();
      acct_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acct_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_nym_id();
      nym_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nym_id_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_memo();
      memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_public_key();
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
  }
}

void ContactAcct_InternalPB::CopyFrom(const ContactAcct_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.ContactAcct_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactAcct_InternalPB::IsInitialized() const {
  return true;
}

void ContactAcct_InternalPB::Swap(ContactAcct_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactAcct_InternalPB::InternalSwap(ContactAcct_InternalPB* other) {
  using std::swap;
  gui_label_.Swap(&other->gui_label_);
  server_type_.Swap(&other->server_type_);
  notary_id_.Swap(&other->notary_id_);
  instrument_definition_id_.Swap(&other->instrument_definition_id_);
  acct_id_.Swap(&other->acct_id_);
  nym_id_.Swap(&other->nym_id_);
  memo_.Swap(&other->memo_);
  public_key_.Swap(&other->public_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ContactAcct_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.ContactAcct_InternalPB";
}


// ===================================================================

void Contact_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Contact_InternalPB::kGuiLabelFieldNumber;
const int Contact_InternalPB::kContactIdFieldNumber;
const int Contact_InternalPB::kEmailFieldNumber;
const int Contact_InternalPB::kMemoFieldNumber;
const int Contact_InternalPB::kPublicKeyFieldNumber;
const int Contact_InternalPB::kNymsFieldNumber;
const int Contact_InternalPB::kAccountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Contact_InternalPB::Contact_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Moneychanger_2eproto::InitDefaultsContact_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.Contact_InternalPB)
}
Contact_InternalPB::Contact_InternalPB(const Contact_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      nyms_(from.nyms_),
      accounts_(from.accounts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gui_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gui_label()) {
    gui_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gui_label_);
  }
  contact_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_contact_id()) {
    contact_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_id_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_memo()) {
    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.Contact_InternalPB)
}

void Contact_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  gui_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Contact_InternalPB::~Contact_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.Contact_InternalPB)
  SharedDtor();
}

void Contact_InternalPB::SharedDtor() {
  gui_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Contact_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Contact_InternalPB& Contact_InternalPB::default_instance() {
  ::protobuf_Moneychanger_2eproto::InitDefaultsContact_InternalPB();
  return *internal_default_instance();
}

Contact_InternalPB* Contact_InternalPB::New(::google::protobuf::Arena* arena) const {
  Contact_InternalPB* n = new Contact_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Contact_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.Contact_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nyms_.Clear();
  accounts_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gui_label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gui_label_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!contact_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*contact_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!memo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*memo_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!public_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*public_key_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Contact_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.Contact_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gui_label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gui_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string contact_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string memo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string public_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.OTDB.ContactNym_InternalPB nyms = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_nyms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.OTDB.ContactAcct_InternalPB accounts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.Contact_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.Contact_InternalPB)
  return false;
#undef DO_
}

void Contact_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.Contact_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gui_label = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gui_label(), output);
  }

  // optional string contact_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contact_id(), output);
  }

  // optional string email = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // optional string memo = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->memo(), output);
  }

  // optional string public_key = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->public_key(), output);
  }

  // repeated .opentxs.OTDB.ContactNym_InternalPB nyms = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nyms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->nyms(static_cast<int>(i)), output);
  }

  // repeated .opentxs.OTDB.ContactAcct_InternalPB accounts = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accounts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->accounts(static_cast<int>(i)), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.Contact_InternalPB)
}

size_t Contact_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.Contact_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .opentxs.OTDB.ContactNym_InternalPB nyms = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->nyms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nyms(static_cast<int>(i)));
    }
  }

  // repeated .opentxs.OTDB.ContactAcct_InternalPB accounts = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->accounts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accounts(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string gui_label = 1;
    if (has_gui_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gui_label());
    }

    // optional string contact_id = 2;
    if (has_contact_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contact_id());
    }

    // optional string email = 3;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string memo = 4;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }

    // optional string public_key = 5;
    if (has_public_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->public_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Contact_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Contact_InternalPB*>(&from));
}

void Contact_InternalPB::MergeFrom(const Contact_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.Contact_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nyms_.MergeFrom(from.nyms_);
  accounts_.MergeFrom(from.accounts_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gui_label();
      gui_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gui_label_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_contact_id();
      contact_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_memo();
      memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_public_key();
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
  }
}

void Contact_InternalPB::CopyFrom(const Contact_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.Contact_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact_InternalPB::IsInitialized() const {
  return true;
}

void Contact_InternalPB::Swap(Contact_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contact_InternalPB::InternalSwap(Contact_InternalPB* other) {
  using std::swap;
  nyms_.InternalSwap(&other->nyms_);
  accounts_.InternalSwap(&other->accounts_);
  gui_label_.Swap(&other->gui_label_);
  contact_id_.Swap(&other->contact_id_);
  email_.Swap(&other->email_);
  memo_.Swap(&other->memo_);
  public_key_.Swap(&other->public_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string Contact_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.Contact_InternalPB";
}


// ===================================================================

void AddressBook_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddressBook_InternalPB::kContactsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddressBook_InternalPB::AddressBook_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Moneychanger_2eproto::InitDefaultsAddressBook_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.AddressBook_InternalPB)
}
AddressBook_InternalPB::AddressBook_InternalPB(const AddressBook_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      contacts_(from.contacts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.AddressBook_InternalPB)
}

void AddressBook_InternalPB::SharedCtor() {
  _cached_size_ = 0;
}

AddressBook_InternalPB::~AddressBook_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.AddressBook_InternalPB)
  SharedDtor();
}

void AddressBook_InternalPB::SharedDtor() {
}

void AddressBook_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const AddressBook_InternalPB& AddressBook_InternalPB::default_instance() {
  ::protobuf_Moneychanger_2eproto::InitDefaultsAddressBook_InternalPB();
  return *internal_default_instance();
}

AddressBook_InternalPB* AddressBook_InternalPB::New(::google::protobuf::Arena* arena) const {
  AddressBook_InternalPB* n = new AddressBook_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddressBook_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.AddressBook_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contacts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddressBook_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.AddressBook_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .opentxs.OTDB.Contact_InternalPB contacts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_contacts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.AddressBook_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.AddressBook_InternalPB)
  return false;
#undef DO_
}

void AddressBook_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.AddressBook_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opentxs.OTDB.Contact_InternalPB contacts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contacts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->contacts(static_cast<int>(i)), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.AddressBook_InternalPB)
}

size_t AddressBook_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.AddressBook_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .opentxs.OTDB.Contact_InternalPB contacts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->contacts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contacts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddressBook_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const AddressBook_InternalPB*>(&from));
}

void AddressBook_InternalPB::MergeFrom(const AddressBook_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.AddressBook_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contacts_.MergeFrom(from.contacts_);
}

void AddressBook_InternalPB::CopyFrom(const AddressBook_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.AddressBook_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressBook_InternalPB::IsInitialized() const {
  return true;
}

void AddressBook_InternalPB::Swap(AddressBook_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddressBook_InternalPB::InternalSwap(AddressBook_InternalPB* other) {
  using std::swap;
  contacts_.InternalSwap(&other->contacts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string AddressBook_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.AddressBook_InternalPB";
}


// ===================================================================

void WalletData_InternalPB::InitAsDefaultInstance() {
}
void WalletData_InternalPB::clear_bitcoin_server() {
  bitcoin_server_.Clear();
}
void WalletData_InternalPB::clear_bitcoin_acct() {
  bitcoin_acct_.Clear();
}
void WalletData_InternalPB::clear_ripple_server() {
  ripple_server_.Clear();
}
void WalletData_InternalPB::clear_loom_server() {
  loom_server_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WalletData_InternalPB::kBitcoinServerFieldNumber;
const int WalletData_InternalPB::kBitcoinAcctFieldNumber;
const int WalletData_InternalPB::kRippleServerFieldNumber;
const int WalletData_InternalPB::kLoomServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WalletData_InternalPB::WalletData_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Moneychanger_2eproto::InitDefaultsWalletData_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.WalletData_InternalPB)
}
WalletData_InternalPB::WalletData_InternalPB(const WalletData_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bitcoin_server_(from.bitcoin_server_),
      bitcoin_acct_(from.bitcoin_acct_),
      ripple_server_(from.ripple_server_),
      loom_server_(from.loom_server_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.WalletData_InternalPB)
}

void WalletData_InternalPB::SharedCtor() {
  _cached_size_ = 0;
}

WalletData_InternalPB::~WalletData_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.WalletData_InternalPB)
  SharedDtor();
}

void WalletData_InternalPB::SharedDtor() {
}

void WalletData_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const WalletData_InternalPB& WalletData_InternalPB::default_instance() {
  ::protobuf_Moneychanger_2eproto::InitDefaultsWalletData_InternalPB();
  return *internal_default_instance();
}

WalletData_InternalPB* WalletData_InternalPB::New(::google::protobuf::Arena* arena) const {
  WalletData_InternalPB* n = new WalletData_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WalletData_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.WalletData_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bitcoin_server_.Clear();
  bitcoin_acct_.Clear();
  ripple_server_.Clear();
  loom_server_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WalletData_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.WalletData_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .opentxs.OTDB.BitcoinServer_InternalPB bitcoin_server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_bitcoin_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.OTDB.BitcoinAcct_InternalPB bitcoin_acct = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_bitcoin_acct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.OTDB.RippleServer_InternalPB ripple_server = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ripple_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.OTDB.LoomServer_InternalPB loom_server = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_loom_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.WalletData_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.WalletData_InternalPB)
  return false;
#undef DO_
}

void WalletData_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.WalletData_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opentxs.OTDB.BitcoinServer_InternalPB bitcoin_server = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bitcoin_server_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->bitcoin_server(static_cast<int>(i)), output);
  }

  // repeated .opentxs.OTDB.BitcoinAcct_InternalPB bitcoin_acct = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bitcoin_acct_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->bitcoin_acct(static_cast<int>(i)), output);
  }

  // repeated .opentxs.OTDB.RippleServer_InternalPB ripple_server = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ripple_server_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->ripple_server(static_cast<int>(i)), output);
  }

  // repeated .opentxs.OTDB.LoomServer_InternalPB loom_server = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loom_server_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->loom_server(static_cast<int>(i)), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.WalletData_InternalPB)
}

size_t WalletData_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.WalletData_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .opentxs.OTDB.BitcoinServer_InternalPB bitcoin_server = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bitcoin_server_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bitcoin_server(static_cast<int>(i)));
    }
  }

  // repeated .opentxs.OTDB.BitcoinAcct_InternalPB bitcoin_acct = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->bitcoin_acct_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bitcoin_acct(static_cast<int>(i)));
    }
  }

  // repeated .opentxs.OTDB.RippleServer_InternalPB ripple_server = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ripple_server_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ripple_server(static_cast<int>(i)));
    }
  }

  // repeated .opentxs.OTDB.LoomServer_InternalPB loom_server = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->loom_server_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->loom_server(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WalletData_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const WalletData_InternalPB*>(&from));
}

void WalletData_InternalPB::MergeFrom(const WalletData_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.WalletData_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bitcoin_server_.MergeFrom(from.bitcoin_server_);
  bitcoin_acct_.MergeFrom(from.bitcoin_acct_);
  ripple_server_.MergeFrom(from.ripple_server_);
  loom_server_.MergeFrom(from.loom_server_);
}

void WalletData_InternalPB::CopyFrom(const WalletData_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.WalletData_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WalletData_InternalPB::IsInitialized() const {
  return true;
}

void WalletData_InternalPB::Swap(WalletData_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WalletData_InternalPB::InternalSwap(WalletData_InternalPB* other) {
  using std::swap;
  bitcoin_server_.InternalSwap(&other->bitcoin_server_);
  bitcoin_acct_.InternalSwap(&other->bitcoin_acct_);
  ripple_server_.InternalSwap(&other->ripple_server_);
  loom_server_.InternalSwap(&other->loom_server_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string WalletData_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.WalletData_InternalPB";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace OTDB
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)
