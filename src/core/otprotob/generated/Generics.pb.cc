// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Generics.proto

#include "Generics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace opentxs {
namespace OTDB {
class String_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<String_InternalPB>
      _instance;
} _String_InternalPB_default_instance_;
class KeyValue_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValue_InternalPB>
      _instance;
} _KeyValue_InternalPB_default_instance_;
class StringMap_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringMap_InternalPB>
      _instance;
} _StringMap_InternalPB_default_instance_;
class Blob_InternalPBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Blob_InternalPB>
      _instance;
} _Blob_InternalPB_default_instance_;
}  // namespace OTDB
}  // namespace opentxs
namespace protobuf_Generics_2eproto {
void InitDefaultsString_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::opentxs::OTDB::_String_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::String_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::String_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsString_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsString_InternalPBImpl);
}

void InitDefaultsKeyValue_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::opentxs::OTDB::_KeyValue_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::KeyValue_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::KeyValue_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsKeyValue_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKeyValue_InternalPBImpl);
}

void InitDefaultsStringMap_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Generics_2eproto::InitDefaultsKeyValue_InternalPB();
  {
    void* ptr = &::opentxs::OTDB::_StringMap_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::StringMap_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::StringMap_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsStringMap_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStringMap_InternalPBImpl);
}

void InitDefaultsBlob_InternalPBImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::opentxs::OTDB::_Blob_InternalPB_default_instance_;
    new (ptr) ::opentxs::OTDB::Blob_InternalPB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::OTDB::Blob_InternalPB::InitAsDefaultInstance();
}

void InitDefaultsBlob_InternalPB() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlob_InternalPBImpl);
}

}  // namespace protobuf_Generics_2eproto
namespace opentxs {
namespace OTDB {

// ===================================================================

void String_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int String_InternalPB::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

String_InternalPB::String_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Generics_2eproto::InitDefaultsString_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.String_InternalPB)
}
String_InternalPB::String_InternalPB(const String_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.String_InternalPB)
}

void String_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

String_InternalPB::~String_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.String_InternalPB)
  SharedDtor();
}

void String_InternalPB::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void String_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const String_InternalPB& String_InternalPB::default_instance() {
  ::protobuf_Generics_2eproto::InitDefaultsString_InternalPB();
  return *internal_default_instance();
}

String_InternalPB* String_InternalPB::New(::google::protobuf::Arena* arena) const {
  String_InternalPB* n = new String_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void String_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.String_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool String_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.String_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.String_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.String_InternalPB)
  return false;
#undef DO_
}

void String_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.String_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.String_InternalPB)
}

size_t String_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.String_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional string value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void String_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const String_InternalPB*>(&from));
}

void String_InternalPB::MergeFrom(const String_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.String_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_has_value();
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void String_InternalPB::CopyFrom(const String_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.String_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool String_InternalPB::IsInitialized() const {
  return true;
}

void String_InternalPB::Swap(String_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void String_InternalPB::InternalSwap(String_InternalPB* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string String_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.String_InternalPB";
}


// ===================================================================

void KeyValue_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValue_InternalPB::kKeyFieldNumber;
const int KeyValue_InternalPB::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValue_InternalPB::KeyValue_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Generics_2eproto::InitDefaultsKeyValue_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.KeyValue_InternalPB)
}
KeyValue_InternalPB::KeyValue_InternalPB(const KeyValue_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.KeyValue_InternalPB)
}

void KeyValue_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyValue_InternalPB::~KeyValue_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.KeyValue_InternalPB)
  SharedDtor();
}

void KeyValue_InternalPB::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValue_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const KeyValue_InternalPB& KeyValue_InternalPB::default_instance() {
  ::protobuf_Generics_2eproto::InitDefaultsKeyValue_InternalPB();
  return *internal_default_instance();
}

KeyValue_InternalPB* KeyValue_InternalPB::New(::google::protobuf::Arena* arena) const {
  KeyValue_InternalPB* n = new KeyValue_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValue_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.KeyValue_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyValue_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.KeyValue_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.KeyValue_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.KeyValue_InternalPB)
  return false;
#undef DO_
}

void KeyValue_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.KeyValue_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.KeyValue_InternalPB)
}

size_t KeyValue_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.KeyValue_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const KeyValue_InternalPB*>(&from));
}

void KeyValue_InternalPB::MergeFrom(const KeyValue_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.KeyValue_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void KeyValue_InternalPB::CopyFrom(const KeyValue_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.KeyValue_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue_InternalPB::IsInitialized() const {
  return true;
}

void KeyValue_InternalPB::Swap(KeyValue_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValue_InternalPB::InternalSwap(KeyValue_InternalPB* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string KeyValue_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.KeyValue_InternalPB";
}


// ===================================================================

void StringMap_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringMap_InternalPB::kNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringMap_InternalPB::StringMap_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Generics_2eproto::InitDefaultsStringMap_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.StringMap_InternalPB)
}
StringMap_InternalPB::StringMap_InternalPB(const StringMap_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      node_(from.node_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.StringMap_InternalPB)
}

void StringMap_InternalPB::SharedCtor() {
  _cached_size_ = 0;
}

StringMap_InternalPB::~StringMap_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.StringMap_InternalPB)
  SharedDtor();
}

void StringMap_InternalPB::SharedDtor() {
}

void StringMap_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringMap_InternalPB& StringMap_InternalPB::default_instance() {
  ::protobuf_Generics_2eproto::InitDefaultsStringMap_InternalPB();
  return *internal_default_instance();
}

StringMap_InternalPB* StringMap_InternalPB::New(::google::protobuf::Arena* arena) const {
  StringMap_InternalPB* n = new StringMap_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringMap_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.StringMap_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringMap_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.StringMap_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .opentxs.OTDB.KeyValue_InternalPB node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.StringMap_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.StringMap_InternalPB)
  return false;
#undef DO_
}

void StringMap_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.StringMap_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opentxs.OTDB.KeyValue_InternalPB node = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->node(static_cast<int>(i)), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.StringMap_InternalPB)
}

size_t StringMap_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.StringMap_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .opentxs.OTDB.KeyValue_InternalPB node = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->node_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringMap_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StringMap_InternalPB*>(&from));
}

void StringMap_InternalPB::MergeFrom(const StringMap_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.StringMap_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_.MergeFrom(from.node_);
}

void StringMap_InternalPB::CopyFrom(const StringMap_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.StringMap_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringMap_InternalPB::IsInitialized() const {
  return true;
}

void StringMap_InternalPB::Swap(StringMap_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringMap_InternalPB::InternalSwap(StringMap_InternalPB* other) {
  using std::swap;
  node_.InternalSwap(&other->node_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StringMap_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.StringMap_InternalPB";
}


// ===================================================================

void Blob_InternalPB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Blob_InternalPB::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Blob_InternalPB::Blob_InternalPB()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Generics_2eproto::InitDefaultsBlob_InternalPB();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.OTDB.Blob_InternalPB)
}
Blob_InternalPB::Blob_InternalPB(const Blob_InternalPB& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:opentxs.OTDB.Blob_InternalPB)
}

void Blob_InternalPB::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Blob_InternalPB::~Blob_InternalPB() {
  // @@protoc_insertion_point(destructor:opentxs.OTDB.Blob_InternalPB)
  SharedDtor();
}

void Blob_InternalPB::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Blob_InternalPB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Blob_InternalPB& Blob_InternalPB::default_instance() {
  ::protobuf_Generics_2eproto::InitDefaultsBlob_InternalPB();
  return *internal_default_instance();
}

Blob_InternalPB* Blob_InternalPB::New(::google::protobuf::Arena* arena) const {
  Blob_InternalPB* n = new Blob_InternalPB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Blob_InternalPB::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.OTDB.Blob_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Blob_InternalPB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.OTDB.Blob_InternalPB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.OTDB.Blob_InternalPB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.OTDB.Blob_InternalPB)
  return false;
#undef DO_
}

void Blob_InternalPB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.OTDB.Blob_InternalPB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.OTDB.Blob_InternalPB)
}

size_t Blob_InternalPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.OTDB.Blob_InternalPB)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // optional bytes value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Blob_InternalPB::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Blob_InternalPB*>(&from));
}

void Blob_InternalPB::MergeFrom(const Blob_InternalPB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.OTDB.Blob_InternalPB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_has_value();
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Blob_InternalPB::CopyFrom(const Blob_InternalPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.OTDB.Blob_InternalPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Blob_InternalPB::IsInitialized() const {
  return true;
}

void Blob_InternalPB::Swap(Blob_InternalPB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Blob_InternalPB::InternalSwap(Blob_InternalPB* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string Blob_InternalPB::GetTypeName() const {
  return "opentxs.OTDB.Blob_InternalPB";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace OTDB
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)
